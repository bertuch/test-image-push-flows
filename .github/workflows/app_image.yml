---
name: "Application Container Image"

on:
    # We are deliberately *not* running on push events here to avoid double runs.
    # Instead, push events will trigger from the base image and maven unit tests via workflow_call.
    workflow_call:
    pull_request:
        branches:
            - develop
            - main
        paths:
            - 'src/main/docker/**'
            - '.github/workflows/app_image.yml'

env:
    IMAGE_TAG: unstable
    BASE_IMAGE_TAG: unstable
    PLATFORMS: "linux/amd64,linux/arm64"

jobs:
    build:
        name: "Build & Test"
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            pull-requests: write
        # Only run in upstream repo - avoid unnecessary runs in forks
        if: ${{ github.repository_owner == 'poikilotherm' }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Set up JDK 11
              uses: actions/setup-java@v3
              with:
                  java-version: "11"
                  distribution: 'adopt'
            - name: Cache Maven packages
              uses: actions/cache@v3
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2

            - name: Build app container image with local architecture
              run: mvn -Pct package -Dbase.image.tag=${{ env.BASE_IMAGE_TAG }}

            # TODO: add smoke / integration testing here

    push:
        name: "Package & Publish"
        runs-on: ubuntu-latest
        needs: build
        # Only trigger the publication here if this is a push (otherwise we don't have secret access).
        # For pull requests, someone needs to sign off publication via command!
        if: ${{ github.event_name == 'push' }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Set up JDK 11
              uses: actions/setup-java@v3
              with:
                  java-version: "11"
                  distribution: 'adopt'
            - name: Cache Maven packages
              uses: actions/cache@v3
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2

            # Push the description on DockerHub, but only for the develop branch
            - if: ${{ github.ref_name == 'develop' }}
              name: Push description to DockerHub
              uses: peter-evans/dockerhub-description@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
                  repository: poikilotherm/test
                  short-description: "Just a little test!"
                  readme-filepath: ./base/README.md

            - name: Log in to Docker Hub registry
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Set up QEMU for multi-arch builds
              uses: docker/setup-qemu-action@v2

            - name: Re-set image tag based on branch (if main)
              if: ${{ github.ref_name == 'main' }}
              run: |
                  echo "IMAGE_TAG=stable" >> $GITHUB_ENV
                  echo "BASE_IMAGE_TAG=stable" >> $GITHUB_ENV

            - name: Deploy multi-arch application container image
              run: mvn -Pct deploy -Dapp.image.tag=${{ env.IMAGE_TAG }} -Dbase.image.tag=${{ env.BASE_IMAGE_TAG }} -Ddocker.platforms=${{ env.PLATFORMS }}
